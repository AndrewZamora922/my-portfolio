{"ast":null,"code":"var _jsxFileName = \"/Users/andrewzamora/Documents/06-15-remo-java-ADV/weektwo/DayThree/my-portfolio-app/src/components/Contact.jsx\";\nimport React from \"react\";\nimport \"./Contact.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n      color: gre\n    }\n  }\n}));\nexport default class SomeComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        email: \"\",\n        phone: \"\",\n        name: \"\"\n      }\n    };\n    this.emailRef = /*#__PURE__*/React.createRef();\n    this.phoneRef = /*#__PURE__*/React.createRef();\n    this.nameRef = /*#__PURE__*/React.createRef();\n\n    this.handleValue = event => {\n      const {\n        data\n      } = this.state;\n      data[event.target.name] = event.target.value;\n      this.setState({\n        data\n      });\n    };\n\n    this.handleBlur = event => {\n      const {\n        name,\n        value\n      } = event.target;\n\n      if (name === \"email\") {\n        // set true as second parameter to onBlur required validation\n        this.emailRef.current.validate(value);\n      }\n    };\n\n    this.handlephoneBlur = event => {\n      const {\n        number,\n        value\n      } = event.target;\n\n      if (number === \"phone\") {\n        // set true as second parameter to onBlur required validation\n        this.phoneRef.current.validate(value);\n      }\n    };\n\n    this.handleNameBlur = event => {\n      const {\n        name,\n        value\n      } = event.target;\n\n      if (name === \"name\") {\n        // set true as second parameter to onBlur required validation\n        this.nameRef.current.validate(value);\n      }\n    };\n\n    this.handleSubmit = () => {// your submit logic\n    };\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"contact__background\",\n        src: \"https://images.unsplash.com/photo-1480506132288-68f7705954bd?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1586&q=80\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n        ref: r => this.form = r,\n        onSubmit: this.handleSubmit,\n        instantValidate: false,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact__name\",\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            ref: this.nameRef,\n            name: \"name\",\n            label: \"name\",\n            value: data.name,\n            onBlur: this.handlenameBlur,\n            onChange: this.handleValue,\n            validators: [\"isname\", \"required\"],\n            errorMessages: [\"wrong name\", \"this field is required\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact__email\",\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            ref: this.emailRef,\n            name: \"email\",\n            label: \"email\",\n            value: data.email,\n            onBlur: this.handleBlur,\n            onChange: this.handleValue,\n            validators: [\"isEmail\", \"required\"],\n            errorMessages: [\"wrong email\", \"this field is required\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact__phone\",\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            ref: this.phoneRef,\n            name: \"phone\",\n            label: \"phone\",\n            value: data.phone,\n            onBlur: this.handlephoneBlur,\n            onChange: this.handleValue,\n            validators: [\"isphone\", \"required\"],\n            errorMessages: [\"wrong phone number\", \"this field is required\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.form.submit(),\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/andrewzamora/Documents/06-15-remo-java-ADV/weektwo/DayThree/my-portfolio-app/src/components/Contact.jsx"],"names":["React","Button","TextValidator","ValidatorForm","makeStyles","useStyles","theme","root","margin","spacing","width","color","gre","SomeComponent","Component","state","data","email","phone","name","emailRef","createRef","phoneRef","nameRef","handleValue","event","target","value","setState","handleBlur","current","validate","handlephoneBlur","number","handleNameBlur","handleSubmit","render","r","form","handlenameBlur","submit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAGA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,aAAS;AACPC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADD;AAEPC,MAAAA,KAAK,EAAE,MAFA;AAGPC,MAAAA,KAAK,EAAEC;AAHA;AADL;AADiC,CAAZ,CAAD,CAA5B;AASA,eAAe,MAAMC,aAAN,SAA4Bb,KAAK,CAACc,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAEzDC,KAFyD,GAEjD;AACNC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,KAAK,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE;AAA9B;AADA,KAFiD;AAAA,SAMzDC,QANyD,gBAM9CpB,KAAK,CAACqB,SAAN,EAN8C;AAAA,SAOzDC,QAPyD,gBAO9CtB,KAAK,CAACqB,SAAN,EAP8C;AAAA,SAQzDE,OARyD,gBAQ/CvB,KAAK,CAACqB,SAAN,EAR+C;;AAAA,SAUzDG,WAVyD,GAU1CC,KAAD,IAAW;AACvB,YAAM;AAAET,QAAAA;AAAF,UAAW,KAAKD,KAAtB;AACAC,MAAAA,IAAI,CAACS,KAAK,CAACC,MAAN,CAAaP,IAAd,CAAJ,GAA0BM,KAAK,CAACC,MAAN,CAAaC,KAAvC;AACA,WAAKC,QAAL,CAAc;AAAEZ,QAAAA;AAAF,OAAd;AACD,KAdwD;;AAAA,SAgBzDa,UAhByD,GAgB3CJ,KAAD,IAAW;AACtB,YAAM;AAAEN,QAAAA,IAAF;AAAQQ,QAAAA;AAAR,UAAkBF,KAAK,CAACC,MAA9B;;AACA,UAAIP,IAAI,KAAK,OAAb,EAAsB;AACpB;AACA,aAAKC,QAAL,CAAcU,OAAd,CAAsBC,QAAtB,CAA+BJ,KAA/B;AACD;AACF,KAtBwD;;AAAA,SAwBzDK,eAxByD,GAwBtCP,KAAD,IAAW;AAC3B,YAAM;AAAEQ,QAAAA,MAAF;AAAUN,QAAAA;AAAV,UAAoBF,KAAK,CAACC,MAAhC;;AACA,UAAIO,MAAM,KAAK,OAAf,EAAwB;AACtB;AACA,aAAKX,QAAL,CAAcQ,OAAd,CAAsBC,QAAtB,CAA+BJ,KAA/B;AACD;AACF,KA9BwD;;AAAA,SAgCzDO,cAhCyD,GAgCvCT,KAAD,IAAW;AAC1B,YAAM;AAAEN,QAAAA,IAAF;AAAQQ,QAAAA;AAAR,UAAkBF,KAAK,CAACC,MAA9B;;AACA,UAAIP,IAAI,KAAK,MAAb,EAAqB;AACnB;AACA,aAAKI,OAAL,CAAaO,OAAb,CAAqBC,QAArB,CAA8BJ,KAA9B;AACD;AACF,KAtCwD;;AAAA,SAwCzDQ,YAxCyD,GAwC1C,MAAM,CACnB;AACD,KA1CwD;AAAA;;AA4CzDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEpB,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,qBADZ;AAEE,QAAA,GAAG,EAAC,gKAFN;AAGE,QAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,aAAD;AACE,QAAA,GAAG,EAAGsB,CAAD,IAAQ,KAAKC,IAAL,GAAYD,CAD3B;AAEE,QAAA,QAAQ,EAAE,KAAKF,YAFjB;AAGE,QAAA,eAAe,EAAE,KAHnB;AAAA,gCAKA;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE,QAAC,aAAD;AACE,YAAA,GAAG,EAAE,KAAKZ,OADZ;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,KAAK,EAAC,MAHR;AAIE,YAAA,KAAK,EAAEP,IAAI,CAACG,IAJd;AAKE,YAAA,MAAM,EAAE,KAAKoB,cALf;AAME,YAAA,QAAQ,EAAE,KAAKf,WANjB;AAOE,YAAA,UAAU,EAAE,CAAC,QAAD,EAAW,UAAX,CAPd;AAQE,YAAA,aAAa,EAAE,CAAC,YAAD,EAAe,wBAAf;AARjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALA,eAiBE;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAkBE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACA,QAAC,aAAD;AACE,YAAA,GAAG,EAAE,KAAKJ,QADZ;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAC,OAHR;AAIE,YAAA,KAAK,EAAEJ,IAAI,CAACC,KAJd;AAKE,YAAA,MAAM,EAAE,KAAKY,UALf;AAME,YAAA,QAAQ,EAAE,KAAKL,WANjB;AAOE,YAAA,UAAU,EAAE,CAAC,SAAD,EAAY,UAAZ,CAPd;AAQE,YAAA,aAAa,EAAE,CAAC,aAAD,EAAgB,wBAAhB;AARjB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAlBF,eA8BE;AAAA;AAAA;AAAA;AAAA,gBA9BF,eA+BE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACA,QAAC,aAAD;AACE,YAAA,GAAG,EAAE,KAAKF,QADZ;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAC,OAHR;AAIE,YAAA,KAAK,EAAEN,IAAI,CAACE,KAJd;AAKE,YAAA,MAAM,EAAE,KAAKc,eALf;AAME,YAAA,QAAQ,EAAE,KAAKR,WANjB;AAOE,YAAA,UAAU,EAAE,CAAC,SAAD,EAAY,UAAZ,CAPd;AAQE,YAAA,aAAa,EAAE,CAAC,oBAAD,EAAuB,wBAAvB;AARjB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBA/BF,eA2CE;AAAA;AAAA;AAAA;AAAA,gBA3CF,eA4CE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKc,IAAL,CAAUE,MAAV,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuDD;;AArGwD","sourcesContent":["import React from \"react\";\nimport \"./Contact.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n      color: gre\n    },\n  },\n}));\nexport default class SomeComponent extends React.Component {\n\n  state = {\n    data: { email: \"\", phone: \"\", name: \"\" },\n  };\n\n  emailRef = React.createRef();\n  phoneRef = React.createRef();\n  nameRef = React.createRef();\n\n  handleValue = (event) => {\n    const { data } = this.state;\n    data[event.target.name] = event.target.value;\n    this.setState({ data });\n  };\n\n  handleBlur = (event) => {\n    const { name, value } = event.target;\n    if (name === \"email\") {\n      // set true as second parameter to onBlur required validation\n      this.emailRef.current.validate(value);\n    }\n  };\n\n  handlephoneBlur = (event) => {\n    const { number, value } = event.target;\n    if (number === \"phone\") {\n      // set true as second parameter to onBlur required validation\n      this.phoneRef.current.validate(value);\n    }\n  };\n\n  handleNameBlur = (event) => {\n    const { name, value } = event.target;\n    if (name === \"name\") {\n      // set true as second parameter to onBlur required validation\n      this.nameRef.current.validate(value);\n    }\n  };\n\n  handleSubmit = () => {\n    // your submit logic\n  };\n\n  render() {\n    const { data } = this.state;\n    return (\n      <div className=\"contact\">\n        <img\n          className=\"contact__background\"\n          src=\"https://images.unsplash.com/photo-1480506132288-68f7705954bd?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1586&q=80\"\n          alt=\"\"\n        />\n        <ValidatorForm\n          ref={(r) => (this.form = r)}\n          onSubmit={this.handleSubmit}\n          instantValidate={false}\n        >\n        <div className='contact__name'>\n          <TextValidator\n            ref={this.nameRef}\n            name=\"name\"\n            label=\"name\"\n            value={data.name}\n            onBlur={this.handlenameBlur}\n            onChange={this.handleValue}\n            validators={[\"isname\", \"required\"]}\n            errorMessages={[\"wrong name\", \"this field is required\"]}\n          />\n          </div>\n          <br />\n          <div className='contact__email'>\n          <TextValidator\n            ref={this.emailRef}\n            name=\"email\"\n            label=\"email\"\n            value={data.email}\n            onBlur={this.handleBlur}\n            onChange={this.handleValue}\n            validators={[\"isEmail\", \"required\"]}\n            errorMessages={[\"wrong email\", \"this field is required\"]}\n          />\n          </div>\n          <br />\n          <div className='contact__phone'>\n          <TextValidator\n            ref={this.phoneRef}\n            name=\"phone\"\n            label=\"phone\"\n            value={data.phone}\n            onBlur={this.handlephoneBlur}\n            onChange={this.handleValue}\n            validators={[\"isphone\", \"required\"]}\n            errorMessages={[\"wrong phone number\", \"this field is required\"]}\n          />\n          </div>\n          <br />\n          <Button onClick={() => this.form.submit()}>submit</Button>\n        </ValidatorForm>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}