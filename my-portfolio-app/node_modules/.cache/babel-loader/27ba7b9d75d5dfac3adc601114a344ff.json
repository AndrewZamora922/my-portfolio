{"ast":null,"code":"var _jsxFileName = \"/Users/andrewzamora/Documents/06-15-remo-java-ADV/weektwo/DayThree/my-portfolio-app/src/components/Contact.jsx\";\nimport React from \"react\";\nimport \"./Contact.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SomeComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        email: \"\",\n        phone: 0,\n        name: \"\"\n      }\n    };\n    this.emailRef = /*#__PURE__*/React.createRef();\n    this.phoneRef = /*#__PURE__*/React.createRef();\n    this.nameRef = /*#__PURE__*/React.createRef();\n\n    this.handleValue = event => {\n      const {\n        data\n      } = this.state;\n      data[event.target.name] = event.target.value;\n      this.setState({\n        data\n      });\n    };\n\n    this.handleBlur = event => {\n      const {\n        name,\n        value\n      } = event.target;\n\n      if (name === \"email\") {\n        // set true as second parameter to onBlur required validation\n        this.emailRef.current.validate(value);\n      }\n    };\n\n    this.handlephoneBlur = event => {\n      const {\n        value,\n        setValue\n      } = event.target;\n\n      if (name === \"phone\") {\n        // set true as second parameter to onBlur required validation\n        this.phoneRef.current.validate(value);\n      }\n    };\n\n    this.handleNameBlur = event => {\n      const {\n        name,\n        value\n      } = event.target;\n\n      if (name === \"name\") {\n        // set true as second parameter to onBlur required validation\n        this.nameRef.current.validate(value);\n      }\n    };\n\n    this.handleSubmit = () => {// your submit logic\n    };\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      ref: r => this.form = r,\n      onSubmit: this.handleSubmit,\n      instantValidate: false,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        ref: this.nameRef,\n        name: \"name\",\n        label: \"name\",\n        value: data.name,\n        onBlur: this.handlenameBlur,\n        onChange: this.handleValue,\n        validators: [\"isname\", \"required\"],\n        errorMessages: [\"wrong name\", \"this field is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        ref: this.emailRef,\n        name: \"email\",\n        label: \"email\",\n        value: data.email,\n        onBlur: this.handleBlur,\n        onChange: this.handleValue,\n        validators: [\"isEmail\", \"required\"],\n        errorMessages: [\"wrong email\", \"this field is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        ref: this.phoneRef,\n        name: \"phone\",\n        label: \"phone\",\n        value: data.phone,\n        onBlur: this.handlephoneBlur,\n        onChange: this.handleValue,\n        validators: [\"isphone\", \"required\"],\n        errorMessages: [\"wrong phone number\", \"this field is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => this.form.submit(),\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/andrewzamora/Documents/06-15-remo-java-ADV/weektwo/DayThree/my-portfolio-app/src/components/Contact.jsx"],"names":["React","Button","TextValidator","ValidatorForm","SomeComponent","Component","state","data","email","phone","name","emailRef","createRef","phoneRef","nameRef","handleValue","event","target","value","setState","handleBlur","current","validate","handlephoneBlur","setValue","handleNameBlur","handleSubmit","render","r","form","handlenameBlur","submit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Contact.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\n\n\n\n\n  export default class SomeComponent extends React.Component {\n    state = {\n      data: { email: \"\", phone:0, name: \"\" },\n    };\n\n    emailRef = React.createRef();\n    phoneRef = React.createRef();\n    nameRef = React.createRef();\n\n    handleValue = (event) => {\n      const { data } = this.state;\n      data[event.target.name] = event.target.value;\n      this.setState({ data });\n    };\n\n    handleBlur = (event) => {\n      const { name, value } = event.target;\n      if (name === \"email\") {\n        // set true as second parameter to onBlur required validation\n        this.emailRef.current.validate(value);\n      }\n    };\n\n    handlephoneBlur = (event) => {\n      const { value, setValue } = event.target;\n      if (name === \"phone\") {\n        // set true as second parameter to onBlur required validation\n        this.phoneRef.current.validate(value);\n      }\n    };\n\n    handleNameBlur = (event) => {\n      const { name, value } = event.target;\n      if (name === \"name\") {\n        // set true as second parameter to onBlur required validation\n        this.nameRef.current.validate(value);\n      }\n    };\n\n    handleSubmit = () => {\n      // your submit logic\n    };\n    render() {\n      const { data } = this.state;\n      return (\n        <ValidatorForm\n          ref={(r) => (this.form = r)}\n          onSubmit={this.handleSubmit}\n          instantValidate={false}\n        >\n          <TextValidator\n            ref={this.nameRef}\n            name=\"name\"\n            label=\"name\"\n            value={data.name}\n            onBlur={this.handlenameBlur}\n            onChange={this.handleValue}\n            validators={[\"isname\", \"required\"]}\n            errorMessages={[\"wrong name\", \"this field is required\"]}\n          />\n          <br />\n          <TextValidator\n            ref={this.emailRef}\n            name=\"email\"\n            label=\"email\"\n            value={data.email}\n            onBlur={this.handleBlur}\n            onChange={this.handleValue}\n            validators={[\"isEmail\", \"required\"]}\n            errorMessages={[\"wrong email\", \"this field is required\"]}\n          />\n          <br />\n          <TextValidator\n            ref={this.phoneRef}\n            name=\"phone\"\n            label=\"phone\"\n            value={data.phone}\n            onBlur={this.handlephoneBlur}\n            onChange={this.handleValue}\n            validators={[\"isphone\", \"required\"]}\n            errorMessages={[\"wrong phone number\", \"this field is required\"]}\n          />\n          <br />\n          <Button onClick={() => this.form.submit()}>submit</Button>\n        </ValidatorForm>\n      );\n    }\n\n  }\n\n"]},"metadata":{},"sourceType":"module"}