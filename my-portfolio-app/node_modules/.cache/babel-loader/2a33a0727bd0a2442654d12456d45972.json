{"ast":null,"code":"var _jsxFileName = \"/Users/andrewzamora/Documents/06-15-remo-java-ADV/weektwo/DayThree/my-portfolio-app/src/components/Contact.jsx\";\nimport React from \"react\";\nimport \"./Contact.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SomeComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        email: \"\",\n        phone: \"\",\n        name: \"\"\n      }\n    };\n    this.emailRef = /*#__PURE__*/React.createRef();\n    this.phoneRef = /*#__PURE__*/React.createRef();\n    this.nameRef = /*#__PURE__*/React.createRef();\n\n    this.handleValue = event => {\n      const {\n        data\n      } = this.state;\n      data[event.target.name] = event.target.value;\n      this.setState({\n        data\n      });\n    };\n\n    this.handleBlur = event => {\n      const {\n        name,\n        value\n      } = event.target;\n\n      if (name === \"email\") {\n        // set true as second parameter to onBlur required validation\n        this.emailRef.current.validate(value);\n      }\n    };\n\n    this.handlephoneBlur = event => {\n      const {\n        number,\n        value\n      } = event.target;\n\n      if (number === \"phone\") {\n        // set true as second parameter to onBlur required validation\n        this.phoneRef.current.validate(value);\n      }\n    };\n\n    this.handleNameBlur = event => {\n      const {\n        name,\n        value\n      } = event.target;\n\n      if (name === \"name\") {\n        // set true as second parameter to onBlur required validation\n        this.nameRef.current.validate(value);\n      }\n    };\n\n    this.handleSubmit = () => {// your submit logic\n    };\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Contact Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"Name\",\n          type: \"Name\",\n          value: Name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"Email\",\n          type: \"Email\",\n          value: Email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Phone Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"Phone\",\n          type: \"Phone\",\n          value: Phone,\n          onChange: e => setPhone(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/andrewzamora/Documents/06-15-remo-java-ADV/weektwo/DayThree/my-portfolio-app/src/components/Contact.jsx"],"names":["React","Button","TextValidator","ValidatorForm","SomeComponent","Component","state","data","email","phone","name","emailRef","createRef","phoneRef","nameRef","handleValue","event","target","value","setState","handleBlur","current","validate","handlephoneBlur","number","handleNameBlur","handleSubmit","render","Name","e","setName","Email","setEmail","Phone","setPhone"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Contact.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\n\n\nexport default class SomeComponent extends React.Component {\n  state = {\n    data: { email: \"\", phone: \"\", name: \"\" },\n  };\n\n  emailRef = React.createRef();\n  phoneRef = React.createRef();\n  nameRef = React.createRef();\n\n  handleValue = (event) => {\n    const { data } = this.state;\n    data[event.target.name] = event.target.value;\n    this.setState({ data });\n  };\n\n  handleBlur = (event) => {\n    const { name, value } = event.target;\n    if (name === \"email\") {\n      // set true as second parameter to onBlur required validation\n      this.emailRef.current.validate(value);\n    }\n  };\n\n  handlephoneBlur = (event) => {\n    const { number, value } = event.target;\n    if (number === \"phone\") {\n      // set true as second parameter to onBlur required validation\n      this.phoneRef.current.validate(value);\n    }\n  };\n\n  handleNameBlur = (event) => {\n    const { name, value } = event.target;\n    if (name === \"name\") {\n      // set true as second parameter to onBlur required validation\n      this.nameRef.current.validate(value);\n    }\n  };\n\n  handleSubmit = () => {\n    // your submit logic\n  };\n\n  render() {\n    const { data } = this.state;\n    return (\n      <form onSubmit={handleSubmit}>\n        <h1>Contact Me</h1>\n  \n        <label>\n          Name:\n          <input\n            name=\"Name\"\n            type=\"Name\"\n            value={Name}\n            onChange={e => setName(e.target.value)}\n            required />\n        </label>\n        \n        <label>\n          Email:\n          <input\n            name=\"Email\"\n            type=\"Email\"\n            value={Email}\n            onChange={e => setEmail(e.target.value)}\n            required />\n        </label>\n  \n        <label>\n          Phone Number:\n          <input\n            name=\"Phone\"\n            type=\"Phone\"\n            value={Phone}\n            onChange={e => setPhone(e.target.value)}\n            required />\n        </label>\n  \n        <button>Submit</button>\n      </form>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}