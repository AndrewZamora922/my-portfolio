{"ast":null,"code":"var _jsxFileName = \"/Users/andrewzamora/Documents/06-15-remo-java-ADV/weektwo/DayThree/my-portfolio-app/src/components/Contact.jsx\";\nimport React from \"react\";\nimport \"./Contact.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Contact() {\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    className: \"about\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"about__background\",\n      src: \"https://images.unsplash.com/photo-1480506132288-68f7705954bd?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1586&q=80\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n\n  class SomeComponent extends React.Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        data: {\n          email: \"\",\n          phone: \"\",\n          name: \"\"\n        }\n      };\n      this.emailRef = /*#__PURE__*/React.createRef();\n      this.phoneRef = /*#__PURE__*/React.createRef();\n      this.nameRef = /*#__PURE__*/React.createRef();\n\n      this.handleValue = event => {\n        const {\n          data\n        } = this.state;\n        data[event.target.name] = event.target.value;\n        this.setState({\n          data\n        });\n      };\n\n      this.handleBlur = event => {\n        const {\n          name,\n          value\n        } = event.target;\n\n        if (name === \"email\") {\n          // set true as second parameter to onBlur required validation\n          this.emailRef.current.validate(value);\n        }\n      };\n\n      this.handlephoneBlur = event => {\n        const {\n          name,\n          value\n        } = event.target;\n\n        if (name === \"phone\") {\n          // set true as second parameter to onBlur required validation\n          this.phoneRef.current.validate(value);\n        }\n      };\n\n      this.handleNameBlur = event => {\n        const {\n          name,\n          value\n        } = event.target;\n\n        if (name === \"name\") {\n          // set true as second parameter to onBlur required validation\n          this.nameRef.current.validate(value);\n        }\n      };\n\n      this.handleSubmit = () => {// your submit logic\n      };\n    }\n\n    render() {\n      const {\n        data\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(ValidatorForm, {\n        ref: r => this.form = r,\n        onSubmit: this.handleSubmit,\n        instantValidate: false,\n        children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n          ref: this.nameRef,\n          name: \"name\",\n          label: \"name\",\n          value: data.name,\n          onBlur: this.handlenameBlur,\n          onChange: this.handleValue,\n          validators: [\"isname\", \"required\"],\n          errorMessages: [\"wrong name\", \"this field is required\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n          ref: this.emailRef,\n          name: \"email\",\n          label: \"email\",\n          value: data.email,\n          onBlur: this.handleBlur,\n          onChange: this.handleValue,\n          validators: [\"isEmail\", \"required\"],\n          errorMessages: [\"wrong email\", \"this field is required\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n          ref: this.phoneRef,\n          name: \"phone\",\n          label: \"phone\",\n          value: data.phone,\n          onBlur: this.handlephoneBlur,\n          onChange: this.handleValue,\n          validators: [\"isphone\", \"required\"],\n          errorMessages: [\"wrong phone number\", \"this field is required\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.form.submit(),\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this);\n    }\n\n  }\n}\n_c = Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/andrewzamora/Documents/06-15-remo-java-ADV/weektwo/DayThree/my-portfolio-app/src/components/Contact.jsx"],"names":["React","Button","TextValidator","ValidatorForm","Contact","SomeComponent","Component","state","data","email","phone","name","emailRef","createRef","phoneRef","nameRef","handleValue","event","target","value","setState","handleBlur","current","validate","handlephoneBlur","handleNameBlur","handleSubmit","render","r","form","handlenameBlur","submit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Contact.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\n\nexport default function Contact() {\n  <div className=\"about\">\n    <img\n      className=\"about__background\"\n      src=\"https://images.unsplash.com/photo-1480506132288-68f7705954bd?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1586&q=80\"\n      alt=\"\"\n    />\n  </div>;\n\n  class SomeComponent extends React.Component {\n    state = {\n      data: { email: \"\", phone: \"\", name: \"\" },\n    };\n\n    emailRef = React.createRef();\n    phoneRef = React.createRef();\n    nameRef = React.createRef();\n\n    handleValue = (event) => {\n      const { data } = this.state;\n      data[event.target.name] = event.target.value;\n      this.setState({ data });\n    };\n\n    handleBlur = (event) => {\n      const { name, value } = event.target;\n      if (name === \"email\") {\n        // set true as second parameter to onBlur required validation\n        this.emailRef.current.validate(value);\n      }\n    };\n\n    handlephoneBlur = (event) => {\n      const { name, value } = event.target;\n      if (name === \"phone\") {\n        // set true as second parameter to onBlur required validation\n        this.phoneRef.current.validate(value);\n      }\n    };\n\n    handleNameBlur = (event) => {\n      const { name, value } = event.target;\n      if (name === \"name\") {\n        // set true as second parameter to onBlur required validation\n        this.nameRef.current.validate(value);\n      }\n    };\n\n    handleSubmit = () => {\n      // your submit logic\n    };\n    render() {\n      const { data } = this.state;\n      return (\n        <ValidatorForm\n          ref={(r) => (this.form = r)}\n          onSubmit={this.handleSubmit}\n          instantValidate={false}\n        >\n          <TextValidator\n            ref={this.nameRef}\n            name=\"name\"\n            label=\"name\"\n            value={data.name}\n            onBlur={this.handlenameBlur}\n            onChange={this.handleValue}\n            validators={[\"isname\", \"required\"]}\n            errorMessages={[\"wrong name\", \"this field is required\"]}\n          />\n          <br />\n          <TextValidator\n            ref={this.emailRef}\n            name=\"email\"\n            label=\"email\"\n            value={data.email}\n            onBlur={this.handleBlur}\n            onChange={this.handleValue}\n            validators={[\"isEmail\", \"required\"]}\n            errorMessages={[\"wrong email\", \"this field is required\"]}\n          />\n          <br />\n          <TextValidator\n            ref={this.phoneRef}\n            name=\"phone\"\n            label=\"phone\"\n            value={data.phone}\n            onBlur={this.handlephoneBlur}\n            onChange={this.handleValue}\n            validators={[\"isphone\", \"required\"]}\n            errorMessages={[\"wrong phone number\", \"this field is required\"]}\n          />\n          <br />\n          <Button onClick={() => this.form.submit()}>submit</Button>\n        </ValidatorForm>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}